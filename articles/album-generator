from jinja2 import Environment, FileSystemLoader
import os
from dotenv import load_dotenv
from supabase import create_client, Client
from datetime import datetime

load_dotenv()

SUPABASE_URL = os.getenv("SUPABASE_URL")
SUPABASE_KEY = os.getenv("SUPABASE_KEY")

supabase: Client = create_client(SUPABASE_URL, SUPABASE_KEY)

response = supabase.table("album_full_data").select("*").execute()
albums = response.data if response.data else []

# Load the template
env = Environment(loader=FileSystemLoader('.'))
template = env.get_template('/articles/album-review-template.html')  # Adjust as needed

# Ensure the directory exists
os.makedirs('articles', exist_ok=True)

# Loop through the albums and generate the pages
for album in albums:
    # Render the HTML content
    album["post_date"] = datetime.strptime(album["post_date"], "%Y-%m-%d").date()
    album["release_date"] = datetime.strptime(album["release_date"], "%Y-%m-%d").date()

    output_html = template.render(album)

    # Generate the output file name in the format: artist-title-album-title.html
    output_path = f"articles/{album['artist_name'].replace(' ', '-').lower()}-{album['album_title'].replace(' ', '-').lower()}.html"

    # Write the generated HTML to a file
    with open(output_path, "w", encoding="utf-8") as f:
        f.write(output_html)

    print(f"Page generated: {output_path}")